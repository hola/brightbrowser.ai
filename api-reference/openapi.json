{
    "openapi": "3.0.3",
    "info": {
        "title": "BrowserAI Task API",
        "version": "1.0.0",
        "description": "API for creating and retrieving browser automation tasks and their results."
    },
    "servers": [
        {
            "url": "https://browser.ai/api/v1"
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Insert API token, use the format: `apikey <API-TOKEN>`."
            }
        },
        "schemas": {
            "GeoLocation": {
                "type": "object",
                "required": [
                    "country"
                ],
                "properties": {
                    "country": {
                        "type": "string",
                        "description": "2-letter country code, for example: es for Spain."
                    },
                    "city": {
                        "type": "string"
                    },
                    "zipcode": {
                        "type": "string"
                    }
                }
            },
            "CreateTaskRequest": {
                "type": "object",
                "required": [
                    "instructions",
                    "geoLocation",
                    "project",
                    "type"
                ],
                "properties": {
                    "instructions": {
                        "type": "array",
                        "description": "List of actions to perform. For 'crawler_automation', use natural language. For 'script_automation', use TypeScript code.",
                        "items": {
                            "type": "object",
                            "required": [
                                "action"
                            ],
                            "properties": {
                                "action": {
                                    "type": "string",
                                    "description": "Instruction to be executed by the agent."
                                }
                            }
                        }
                    },
                    "geoLocation": {
                        "$ref": "#/components/schemas/GeoLocation"
                    },
                    "project": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "crawler_automation",
                            "script_automation"
                        ],
                        "description": "Execution engine: 'crawler_automation' for natural language, 'script_automation' for code."
                    },
                    "inspect": {
                        "type": "boolean"
                    }
                }
            },
            "CreateTaskResponse": {
                "type": "object",
                "properties": {
                    "executionId": {
                        "type": "string"
                    },
                    "scriptType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "geoLocation": {
                        "$ref": "#/components/schemas/GeoLocation"
                    },
                    "started": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "estimatedCompletion": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "TaskProgress": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GetTaskResponse": {
                "type": "object",
                "properties": {
                    "executionId": {
                        "type": "string"
                    },
                    "scriptId": {
                        "type": "string"
                    },
                    "scriptType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "progress": {
                        "$ref": "#/components/schemas/TaskProgress"
                    },
                    "started": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "estimatedCompletion": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskResult": {
                "type": "object",
                "properties": {
                    "model_output": {
                        "type": "string"
                    },
                    "result": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "history_index": {
                        "type": "integer"
                    },
                    "screenshot_url": {
                        "type": "string"
                    },
                    "html_url": {
                        "type": "string"
                    },
                    "console_url": {
                        "type": "string"
                    },
                    "insert_ts": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "GetResultsResponse": {
                "type": "object",
                "properties": {
                    "executionId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "started": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskResult"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/tasks": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create a new task.",
                "description": "This endpoint allows you to create a new task using either natural language (crawler_automation) or code instructions (script_automation). You must specify the execution engine, project, location, and task steps.",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskRequest"
                            },
                            "examples": {
                                "crawler_automation": {
                                    "summary": "crawler_automation (natural language)",
                                    "value": {
                                        "instructions": [
                                            {
                                                "action": "Open amazon.com and search for AirPods"
                                            }
                                        ],
                                        "geoLocation": {
                                            "country": "US"
                                        },
                                        "project": "Project_1",
                                        "type": "'crawler_automation"
                                    }
                                },
                                "script_automation": {
                                    "summary": "script_automation (code instructions)",
                                    "value": {
                                        "instructions": [
                                            {
                                                "action": "await page.goto('https://docs.stagehand.dev/reference/introduction')"
                                            },
                                            {
                                                "action": "await page.act('Click the search box')"
                                            }
                                        ],
                                        "geoLocation": {
                                            "country": "US"
                                        },
                                        "project": "Project_1",
                                        "type": "script_automation"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or project not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid input or project not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{session_id}/command": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Stop a running task any time.",
                "description": "Use this endpoint to stop to an active task session.",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "description": "Insert your task’s `session ID` located in your Projects dashboard.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "command": {
                                        "type": "string",
                                        "enum": [
                                            "stop"
                                        ],
                                        "description": "The command to send to the task. Currently only 'stop' is supported."
                                    }
                                },
                                "required": [
                                    "command"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Command accepted and processed",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Task stopped successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid command or task ID",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid command or task ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Task not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{session_id}": {
            "get": {
                "tags": [
                    "Result"
                ],
                "summary": "Get task's metadata.",
                "description": "Retrieve metadata and status information for a specific task using its session ID. This includes execution status, timestamps, and progress logs.",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "description": "Insert your task’s `session ID` located in your Projects dashboard.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTaskResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Task not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/results/{session_id}": {
            "get": {
                "tags": [
                    "Result"
                ],
                "summary": "Get task's results.",
                "description": "Fetch the final results of a completed task, including output, metadata, and console logs. Use the session ID to identify the task.",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "description": "Insert your task’s `session ID` located in your Projects dashboard.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetResultsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Task not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/saved_tasks": {
            "get": {
                "tags": [
                    "Saved Task"
                ],
                "operationId": "getSavedTaskList",
                "summary": "Get a list of saved tasks",
                "description": "Returns a list of all saved tasks associated with the authenticated user. Each task includes its name, project, location, and instruction details.",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of saved tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "taskId": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "project": {
                                                "type": "string"
                                            },
                                            "geoLocation": {
                                                "$ref": "#/components/schemas/GeoLocation"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "cron_settings": {
                                                "type": "string"
                                            },
                                            "instructions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "action": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Internal server error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Saved Task"
                ],
                "operationId": "createSavedTask",
                "summary": "Create a saved task",
                "description": "Create a reusable saved task using natural language instructions. This is useful for automating recurring workflows with predefined settings.",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "instructions",
                                    "type",
                                    "project",
                                    "geoLocation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the saved task",
                                        "example": "MySavedTask"
                                    },
                                    "instructions": {
                                        "type": "array",
                                        "description": "List of natural language actions",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "action"
                                            ],
                                            "properties": {
                                                "action": {
                                                    "type": "string",
                                                    "example": "Open amazon.com, search for AirPods Pro 2, and find the three best prices available"
                                                }
                                            }
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "natural_language"
                                        ],
                                        "description": "Type of the task. Currently only `natural_language` is supported.",
                                        "example": "natural_language"
                                    },
                                    "cron_settings": {
                                        "type": "string",
                                        "description": "Cron expression for scheduling (leave empty for now)",
                                        "example": ""
                                    },
                                    "project": {
                                        "type": "string",
                                        "description": "Project name or ID",
                                        "example": "Project_1"
                                    },
                                    "geoLocation": {
                                        "$ref": "#/components/schemas/GeoLocation"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Saved task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "taskId": {
                                            "type": "string",
                                            "description": "ID of the saved task"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Saved task created successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid input"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/saved_tasks/name/{task_name}": {
            "get": {
                "summary": "Get a saved task by name",
                "description": "Retrieve a specific saved task by its name. This is helpful for accessing or reusing previously saved automation tasks.",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_name",
                        "in": "path",
                        "required": true,
                        "description": "The name of the saved task (URL-encoded if it contains spaces).",
                        "schema": {
                            "type": "string",
                            "example": "MySavedTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved task details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "taskId": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "project": {
                                            "type": "string"
                                        },
                                        "geoLocation": {
                                            "$ref": "#/components/schemas/GeoLocation"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "cron_settings": {
                                            "type": "string"
                                        },
                                        "instructions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "action": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Saved task not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Saved task not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}